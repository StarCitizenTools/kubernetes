apiVersion: v1
kind: Service
metadata:
  name: nginx-phpfpm
spec:
  selector:
    app: nginx-phpfpm
    tier: backend
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 80

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    tier: backend
data:
  config : |
    server {
      listen 0.0.0.0:80;
      server_name k8s.starcitizen.tools;
      root /var/www/mediawiki;
      index index.php;

      client_max_body_size 5m;
      client_body_timeout 60;

      error_log  /var/log/nginx/error.log;
      access_log /var/log/nginx/access.log;
      
      location / {
          try_files $uri $uri/ @rewrite;
      }

      location @rewrite {
          rewrite ^/(.*)$ /index.php?title=$1&$args;
      }

      location ^~ /maintenance/ {
          return 403;
      }

       location /rest.php {
          try_files $uri $uri/ /rest.php?$args;
      }

      location ~ \.php$ {
          try_files $uri =404;
          fastcgi_split_path_info ^(.+\.php)(/.+)$;
          fastcgi_pass localhost:9000;
          fastcgi_index index.php;
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
        }
      
      location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
          try_files $uri /index.php;
          expires max;
          log_not_found off;
      }

      location = /_.gif {
          expires max;
          empty_gif;
      }

      location ^~ /cache/ {
          deny all;
      }

      location /dumps {
          root /var/www/mediawiki/local;
          autoindex on;
      }
    }

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: webroot
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 75Gi
  storageClassName: linode-block-storage-retain

---
apiVersion: v1
kind: Pod
metadata:
  name: nginx-phpfpm
  labels:
     app: nginx-phpfpm
     tier: backend
spec:
  securityContext:
    fsGroup: 33
  volumes:
    - name: webroot
      persistentVolumeClaim:
        claimName: webroot
    - name: nginx-config-volume
      configMap:
        name: nginx-config
        items:
          - key: config
            path: site.conf
  containers:
  - name: nginx
    image: nginx:1.23.3
    ports:
     - containerPort: 80
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "128Mi"
        cpu: "500m"
    volumeMounts:
      - name: webroot
        mountPath: /var/www/mediawiki
      - name: nginx-config-volume
        mountPath: /etc/nginx/conf.d

  - name: php
    image: starcitizentools/mediawiki:139-v0.2.9
    ports:
     - containerPort: 9000
    resources:
      requests:
        memory: "128Mi"
        cpu: "250m"
      limits:
        memory: "256Mi"
        cpu: "1"
    volumeMounts:
      - name: webroot
        mountPath: /var/www/mediawiki
    lifecycle:
      postStart:
        exec:
          command: ["/bin/sh", "-c", "rsync -vaO --no-p /var/www/provisioning/ /var/www/mediawiki"]
    env:
    - name: CLOUDFLARE_APITOKEN
      valueFrom:
        secretKeyRef:
          name: cloudflare-apitoken
          key: cloudflare_apitoken
    - name: CLOUDFLARE_ZONEID
      valueFrom:
        secretKeyRef:
          name: cloudflare-zoneid
          key: cloudflare_zoneid
    - name: DISCORD_WEBHOOKURL
      valueFrom:
        secretKeyRef:
          name: discord-webhookurl
          key: discord_webhookurl
    - name: FLICKR_APIKEY
      valueFrom:
        secretKeyRef:
          name: flickr-apikey
          key: flickr_apikey
    - name: HCAPTCHA_SECRETKEY
      valueFrom:
        secretKeyRef:
          name: hcaptcha-secretkey
          key: hcaptcha_secretkey
    - name: HCAPTCHA_SITEKEY
      valueFrom:
        secretKeyRef:
          name: hcaptcha-sitekey
          key: hcaptcha_sitekey
    - name: MEDIAWIKI_SECRETKEY
      valueFrom:
        secretKeyRef:
          name: mediawiki-secretkey
          key: mw_secretkey
    - name: MEDIAWIKI_UPGRADEKEY
      valueFrom:
        secretKeyRef:
          name: mediawiki-upgradekey
          key: mw_upgradekey
    - name: PRD_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: prd-db-password
          key: db_password

  - name: jobrunner
    image: starcitizentools/mediawiki:jobrunner-v0.2.0
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "500m"
    volumeMounts:
      - name: webroot
        mountPath: /var/www/mediawiki
    env:
    - name: CLOUDFLARE_APITOKEN
      valueFrom:
        secretKeyRef:
          name: cloudflare-apitoken
          key: cloudflare_apitoken
    - name: CLOUDFLARE_ZONEID
      valueFrom:
        secretKeyRef:
          name: cloudflare-zoneid
          key: cloudflare_zoneid
    - name: DISCORD_WEBHOOKURL
      valueFrom:
        secretKeyRef:
          name: discord-webhookurl
          key: discord_webhookurl
    - name: FLICKR_APIKEY
      valueFrom:
        secretKeyRef:
          name: flickr-apikey
          key: flickr_apikey
    - name: HCAPTCHA_SECRETKEY
      valueFrom:
        secretKeyRef:
          name: hcaptcha-secretkey
          key: hcaptcha_secretkey
    - name: HCAPTCHA_SITEKEY
      valueFrom:
        secretKeyRef:
          name: hcaptcha-sitekey
          key: hcaptcha_sitekey
    - name: MEDIAWIKI_SECRETKEY
      valueFrom:
        secretKeyRef:
          name: mediawiki-secretkey
          key: mw_secretkey
    - name: MEDIAWIKI_UPGRADEKEY
      valueFrom:
        secretKeyRef:
          name: mediawiki-upgradekey
          key: mw_upgradekey
    - name: PRD_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: prd-db-password
          key: db_password

  - name: jobchron
    image: starcitizentools/mediawiki:jobrunner-v0.2.0
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
    volumeMounts:
      - name: webroot
        mountPath: /var/www/mediawiki
    env:
    - name: PRD_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: prd-db-password
          key: db_password
    - name: RUNNER_TYPE
      value: Chron