apiVersion: v1
kind: Service
metadata:
  name: nginx-phpfpm
spec:
  selector:
    app: nginx-phpfpm
    tier: backend
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    tier: backend
data: 
  config : |
    server {
    	listen 0.0.0.0:80;
      server_name starcitizen.tools www.starcitizen.tools scw.czen.me;
      root /var/www/mediawiki;
      index index.php;
      
      real_ip_header CF-Connecting-IP;
      set_real_ip_from $remote_addr;

      # Compression
      gzip on;
      gzip_disable "msie6";
      
      gzip_vary on;
      gzip_proxied any;
      gzip_comp_level 6;
      gzip_buffers 16 8k;
      gzip_http_version 1.1;
      gzip_min_length 256;
      gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

      # Security Headers
      add_header X-XSS-Protection "1; mode=block";
      add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
      add_header X-Frame-Options "DENY";
      add_header Referrer-Policy "strict-origin-when-cross-origin";
      add_header Permissions-Policy "accelerometer=(), autoplay=(), camera=(), geolocation=(), gyroscope=(), interest-cohort=() , magnetometer=(), microphone=(), payment=(), usb=()";
      add_header Feature-Policy "accelerometer 'none'; autoplay 'none'; camera 'none'; geolocation 'none'; gyroscope 'none'; magnetometer 'none'; microphone 'none'; payment 'none'; usb 'none'";
      
      location /rest.php {
        try_files $uri $uri/ /rest.php?$args;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME	$document_root/rest.php;
    		fastcgi_pass localhost:9000;
      }
      
    	# Location for the wiki's root
    	location / {
    		try_files $uri $uri/ @mediawiki;

    		# Do this inside of a location so it can be negated
    		location ~ \.php$ {
    			try_files $uri $uri/ =404; # Don't let php execute non-existent php files
    			include fastcgi_params;
    			fastcgi_pass localhost:9000;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    		}
    	}

    	location /images {
        location ~* \.(ico|jpg|jpeg|png|gif)$ {
          expires 2h;
          add_header Cache-Control "public, no-transform";
          add_header X-XSS-Protection "1; mode=block";
          add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
          add_header X-Frame-Options "DENY";
          add_header Referrer-Policy "strict-origin-when-cross-origin";
          add_header Permissions-Policy "accelerometer=(), autoplay=(), camera=(), geolocation=(), gyroscope=(), interest-cohort=() , magnetometer=(), microphone=(), payment=(), usb=()";
          add_header Feature-Policy "accelerometer 'none'; autoplay 'none'; camera 'none'; geolocation 'none'; gyroscope 'none'; magnetometer 'none'; microphone 'none'; payment 'none'; usb 'none'";
        }
    		# Separate location for images/ so .php execution won't apply
    		location ~ ^/images/thumb/(archive/)?[0-9a-f]/[0-9a-f][0-9a-f]/([^/]+)/([0-9]+)px-.*$ {
    			# Thumbnail handler for MediaWiki
    			# This location only matches on a thumbnail's url
    			# If the file does not exist we use @thumb to run the thumb.php script
    			try_files $uri $uri/ @thumb;
    		}
    	}

    	location /images/deleted {
    		# Deny access to deleted images folder
    		deny	all;
    	}

      # Cache control
      location ~* \.woff2* {
         expires 1m;
         add_header Cache-Control "public, no-transform";
         add_header X-XSS-Protection "1; mode=block";
         add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
         add_header X-Frame-Options "DENY";
         add_header Referrer-Policy "strict-origin-when-cross-origin";
         add_header Permissions-Policy "accelerometer=(), autoplay=(), camera=(), geolocation=(), gyroscope=(), interest-cohort=() , magnetometer=(), microphone=(), payment=(), usb=()";
        add_header Feature-Policy "accelerometer 'none'; autoplay 'none'; camera 'none'; geolocation 'none'; gyroscope 'none'; magnetometer 'none'; microphone 'none'; payment 'none'; usb 'none'";
      }
      location ~* \.svg {
         expires 1m;
         add_header Cache-Control "public, no-transform";
         add_header X-XSS-Protection "1; mode=block";
         add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
         add_header X-Frame-Options "DENY";
         add_header Referrer-Policy "strict-origin-when-cross-origin";
         add_header Permissions-Policy "accelerometer=(), autoplay=(), camera=(), geolocation=(), gyroscope=(), interest-cohort=() , magnetometer=(), microphone=(), payment=(), usb=()";
        add_header Feature-Policy "accelerometer 'none'; autoplay 'none'; camera 'none'; geolocation 'none'; gyroscope 'none'; magnetometer 'none'; microphone 'none'; payment 'none'; usb 'none'";
      }

    	# Deny access to folders MediaWiki has a .htaccess deny in
    	location /cache       { deny all; }
    	location /languages   { deny all; }
    	location /maintenance { deny all; }
    	location /serialized  { deny all; }

    	# Just in case, hide .svn and .git too
    	location ~ /.(svn|git)(/|$) { deny all; }

    	# Hide any .htaccess files
    	location ~ /.ht { deny all; }

    	# Uncomment the following code if you wish to hide the installer/updater
    	## Deny access to the installer
    	location /mw-config { deny all; }

    	# Handling for the article path
    	location @mediawiki {
    		include fastcgi_params;
    		# article path should always be passed to index.php
    		fastcgi_param SCRIPT_FILENAME	$document_root/index.php;
    		fastcgi_pass localhost:9000;
    	}

    	# Thumbnail 404 handler, only called by try_files when a thumbnail does not exist
    	location @thumb {
    		# Do a rewrite here so that thumb.php gets the correct arguments
    		rewrite ^/images/thumb/[0-9a-f]/[0-9a-f][0-9a-f]/([^/]+)/([0-9]+)px-.*$ /thumb.php?f=$1&width=$2;
    		rewrite ^/images/thumb/archive/[0-9a-f]/[0-9a-f][0-9a-f]/([^/]+)/([0-9]+)px-.*$ /thumb.php?f=$1&width=$2&archived=1;

    		# Run the thumb.php script
    		include fastcgi_params;
    		fastcgi_param SCRIPT_FILENAME	$document_root/thumb.php;
    		fastcgi_pass localhost:9000;
    	}
    }

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: webroot
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 75Gi
  storageClassName: linode-block-storage-retain

---
apiVersion: v1
kind: Pod
metadata:
  name: nginx-phpfpm
  labels:
     app: nginx-phpfpm
     tier: backend
spec:
  securityContext:
    fsGroup: 33
  volumes:
    - name: webroot
      persistentVolumeClaim:
        claimName: webroot
    - name: nginx-config-volume
      configMap:
        name: nginx-config
        items:
          - key: config
            path: site.conf
  containers:
  - name: nginx
    image: nginx:1.23.3
    ports:
     - containerPort: 80
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "500m"
    volumeMounts:
      - name: webroot
        mountPath: /var/www/mediawiki
      - name: nginx-config-volume
        mountPath: /etc/nginx/conf.d

  - name: php
    image: starcitizentools/mediawiki:139-v1.0.2
    ports:
     - containerPort: 9000
    resources:
      requests:
        memory: "128Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "1.5"
    volumeMounts:
      - name: webroot
        mountPath: /var/www/mediawiki
    lifecycle:
      postStart:
        exec:
          command: ["/bin/sh", "-c", "rsync -vaO --no-p /var/www/provisioning/ /var/www/mediawiki"]
    env:
    - name: CLOUDFLARE_APITOKEN
      valueFrom:
        secretKeyRef:
          name: cloudflare-apitoken
          key: cloudflare_apitoken
    - name: CLOUDFLARE_ZONEID
      valueFrom:
        secretKeyRef:
          name: cloudflare-zoneid
          key: cloudflare_zoneid
    - name: DISCORD_WEBHOOKURL
      valueFrom:
        secretKeyRef:
          name: discord-webhookurl
          key: discord_webhookurl
    - name: FLICKR_APIKEY
      valueFrom:
        secretKeyRef:
          name: flickr-apikey
          key: flickr_apikey
    - name: HCAPTCHA_SECRETKEY
      valueFrom:
        secretKeyRef:
          name: hcaptcha-secretkey
          key: hcaptcha_secretkey
    - name: HCAPTCHA_SITEKEY
      valueFrom:
        secretKeyRef:
          name: hcaptcha-sitekey
          key: hcaptcha_sitekey
    - name: MEDIAWIKI_SECRETKEY
      valueFrom:
        secretKeyRef:
          name: mediawiki-secretkey
          key: mw_secretkey
    - name: MEDIAWIKI_UPGRADEKEY
      valueFrom:
        secretKeyRef:
          name: mediawiki-upgradekey
          key: mw_upgradekey
    - name: PRD_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: prd-db-password
          key: db_password

  - name: jobrunner
    image: starcitizentools/mediawiki:jobrunner-v1.0.0
    command: ["/bin/sh"]
    args: ["-c", "/var/www/html/mediawiki-services-jobrunner/entrypoint.sh"]
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "400m"
    volumeMounts:
      - name: webroot
        mountPath: /var/www/mediawiki
    env:
    - name: CLOUDFLARE_APITOKEN
      valueFrom:
        secretKeyRef:
          name: cloudflare-apitoken
          key: cloudflare_apitoken
    - name: CLOUDFLARE_ZONEID
      valueFrom:
        secretKeyRef:
          name: cloudflare-zoneid
          key: cloudflare_zoneid
    - name: DISCORD_WEBHOOKURL
      valueFrom:
        secretKeyRef:
          name: discord-webhookurl
          key: discord_webhookurl
    - name: FLICKR_APIKEY
      valueFrom:
        secretKeyRef:
          name: flickr-apikey
          key: flickr_apikey
    - name: HCAPTCHA_SECRETKEY
      valueFrom:
        secretKeyRef:
          name: hcaptcha-secretkey
          key: hcaptcha_secretkey
    - name: HCAPTCHA_SITEKEY
      valueFrom:
        secretKeyRef:
          name: hcaptcha-sitekey
          key: hcaptcha_sitekey
    - name: MEDIAWIKI_SECRETKEY
      valueFrom:
        secretKeyRef:
          name: mediawiki-secretkey
          key: mw_secretkey
    - name: MEDIAWIKI_UPGRADEKEY
      valueFrom:
        secretKeyRef:
          name: mediawiki-upgradekey
          key: mw_upgradekey
    - name: PRD_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: prd-db-password
          key: db_password

  - name: jobchron
    image: starcitizentools/mediawiki:jobrunner-v1.0.0
    command: ["/bin/sh"]
    args: ["-c", "/var/www/html/mediawiki-services-jobrunner/entrypoint.sh"]
    resources:
      requests:
        memory: "64Mi"
        cpu: "10m"
      limits:
        memory: "128Mi"
        cpu: "50m"
    volumeMounts:
      - name: webroot
        mountPath: /var/www/mediawiki
    env:
    - name: PRD_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: prd-db-password
          key: db_password
    - name: RUNNER_TYPE
      value: Chron